非IE窗口页面尺寸,也就是整个html文件的尺寸（去掉工具栏的高度）
alert(innerWidth);							//页面长度
alert(innerHeight);							//页面高度
alert(outerWidth);							//页面长度+边框
alert(outerHeight);							//页面高度+边框
PS：谷歌没有边框


IE窗口页面尺寸
if (typeof width != 'number') {				//如果是IE，就使用document		
	if (document.compatMode == 'CSS1Compat') {
		width = document.documentElement.clientWidth;
		height = document.documentElement.clientHeight;
	} else {
		width = document.body.clientWidth;	//非标准模式使用body
		height = document.body.clientHeight;
	}
}



//事件触发位置和电脑屏幕边界的距离，IE会算上工具栏的高度
火狐：screenX和screenY
非火狐：screenLeft和screenTop
兼容：
var leftX = (typeof screenLeft == 'number') ? screenLeft : screenX;
var topY = (typeof screenTop == 'number') ? screenTop : screenY;


//事件触发位置和可见区域边界的距离(忽略滚动条隐藏的距离)
e.clientX	
e.clientY	  //例如鼠标点击事件，点击的位置与窗口边界的距离

//事件触发位置和可见区域边界的距离(算上滚动条的距离)
e.pageX	
e.pageY	



获取test元素实际大小,默认单位px
test.clientWidth;						
test.clientHeight;	
1.增加边框，无变化，为200；
2.增加外边距，无变化，为200；
3.增加滚动条，最终值等于原本大小减去滚动条的大小，为184；
4.增加内边距，最终值等于原本大小加上内边距的大小，为220；


test.offsetWidth;						
test.offsetHeight;	
1.增加边框，最终值会等于原本大小加上边框大小，为220；
2.增加内边距，最终值会等于原本大小加上内边距大小，为220；
3.增加外边据，无变化；
4.增加滚动条，无变化，不会减小；


获取元素边框大小
test.clientLeft;							//获取左边框的长度
test.clientTop;								//获取上边框的长度


元素边界相对父边界的距离。	其父级元素必须是经过定位的(position不等于static)并且离test最近的,否则就是body
	test.offsetLeft;								//50
	test.offsetTop;								//50
	
	

	
 test.offsetParent					//父元素的DOM对象
 test.offsetParent.offsetLeft      //父元素相对其上级的偏移位置


这组属性可以获取滚动条被隐藏的区域大小，也可设置定位到该区域。
test.scrollTop;								//获取滚动内容上方的位置
test.scrollLeft;		
